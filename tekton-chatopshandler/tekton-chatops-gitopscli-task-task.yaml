apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: tekton-chatops-gitopscli-task
spec:
  params:
    - name: comment
    - name: prid
    - name: reponame
    - name: prorg
    - name: apiurl
    - name: gitopscli-version
      default: 4.3.0
  stepTemplate:
    envFrom:
      - secretRef:
          name: github-token
  steps:
    - name: get-branch-name-step
      image: baloise/gitopscli:$(tt.params.gitopscli-version)
      env:
        - name: PRID
          value: "$(tt.params.prid)"
        - name: PRORG
          value: "$(tt.params.prorg)"
        - name: REPONAME
          value: "$(tt.params.reponame)"
      script: |
        #!/usr/bin/env python3
        import json
        import http.client
        import os
        prid = os.environ['PRID']
        prorg = os.environ['PRORG']
        reponame = os.environ['REPONAME']
        token = os.environ['token']
        connection = http.client.HTTPSConnection("api.github.com")
        headers={
            "Content-type": "application/json",
            "Authorization": "Bearer " + token,
            "User-Agent": "TektonCD, the peaceful cat"
        }
        connection.request("GET", f"/repos/{prorg}/{reponame}/pulls/{prid}", "", headers)
        response = connection.getresponse()
        loaded_json = json.loads(response.read())
        branchName = loaded_json["head"]["ref"]
        print(branchName)
        f = open("/workspace/branchfile.txt","w+")
        f.write(branchName)
    - name: perform-chat-ops-step
      image: baloise/gitopscli:$(tt.params.gitopscli-version)
      script: |
        branchName=$(cat /workspace/branchfile.txt)
        echo "$branchName"
        comment="$(tt.params.comment)"
        echo "$comment"
        if [ "$comment" = "/test" ]; then
          gitopscli add-pr-comment \
          --username incubator-tekton \
          --password $token \
          --git-provider github \
          --organisation $(tt.params.prorg) \
          --repository-name $(tt.params.reponame) \
          --text='You can <br>use the command `/ping`!' \
          --pr-id $(tt.params.prid)
        elif [ "$comment" = "/preview" ]; then
          gitopscli create-preview \
          --username incubator-tekton \
          --password $token \
          --git-provider github \
          --git-user incubator-tekton \
          --git-email joachim.prinzbach+github-ttt-travis-bot@gmail.com \
          --organisation $(tt.params.prorg) \
          --repository-name $(tt.params.reponame) \
          --pr-id $(tt.params.prid) \
          --create-pr \
          --auto-merge
        elif [ "$comment" = "/undeploy" ]; then
          gitopscli delete-preview \
          --username incubator-tekton \
          --password $token \
          --git-provider github \
          --git-user incubator-tekton \
          --git-email joachim.prinzbach+github-ttt-travis-bot@gmail.com \
          --organisation $(tt.params.prorg) \
          --repository-name $(tt.params.reponame) \
          --branch "$branchName" \
          --create-pr \
          --auto-merge
        elif [ "$comment" = "/help" ]; then
          gitopscli add-pr-comment \
          --username incubator-tekton \
          --password $token \
          --git-provider github \
          --organisation $(tt.params.prorg) \
          --repository-name $(tt.params.reponame) \
          --text='Need help? Find the docs, examples and a F.A.Q.: [Baloise Incubator: GitOps Cli](https://baloise-incubator.github.io/gitopscli/)' \
          --pr-id $(tt.params.prid)
        elif expr "$comment" : "/replicas*"; then
          replicaCount="${comment//[!0-9]/}"
          gitopscli deploy \
          --username incubator-tekton \
          --password $token \
          --git-user incubator-tekton \
          --git-email joachim.prinzbach+github-ttt-travis-bot@gmail.com \
          --git-provider github \
          --git-provider-url https://github.com/ \
          --organisation $(tt.params.prorg) \
          --repository-name okd4-example-apps \
          --file "gitops-nginx-demo-test/values.yaml" \
          --values "{generic.replicaCount: ${replicaCount}}"
        else
          echo "$comment"
        fi
