# Default values for usu-portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

_configuration:
  imagePullSecrets: &image-pull-secret usu-regcred
  user-management:
    endpoints:
      keycloakUrl: &um-keycloak-url http://portal.usu.local.gd/auth
      profileHostname: &um-profile-hostname profile.portal.usu.local.gd
      profileUrl: &um-profile-url http://profile.portal.usu.local.gd/
      adminHostname: &um-admin-hostname admin.portal.usu.local.gd
      adminUrl: &um-admin-url http://admin.portal.usu.local.gd/
      apiUrl: &um-api-url http://portal.usu.local.gd/user-management-service/
  portal:
    endpoints:
      portalHostname: &portal-hostname portal.usu.local.gd
      dbJdbcUrl: &portal-db-jdbc-url jdbc:mariadb://mariadb:3306/portal

global:
  imagePullSecrets:
    - name: *image-pull-secret
  ingress: &ingress
    enabled: true
    hostname: *portal-hostname
    className: nginx

usuportal:
  portalVersion: &portal-version 2-4-1
  hostname: *portal-hostname
  fallbackLang: "en"
  um:
    keycloakUrl: *um-keycloak-url
    profileUrl: *um-profile-url
    adminUrl: *um-admin-url
  helpPageUrl: "https://www.google.com"
  ingress:
    <<: *ingress
  client:
    image: docker.devops.usu.group/usu-portal/portal/client
    tag: *portal-version
  backend:
    image: docker.devops.usu.group/usu-portal/portal/backend
    tag: *portal-version
    extHostWhitelist: "usu.com"
    # -- a list of jdbc driver images to inject into the backend container
    # injectJdbc:
    #   oracle: busybox:latest
    #   mssql: busybox:latest
    injectJdbc: {}
    # -- jdbc url to use for the backend container
    dbJdbcUrl: *portal-db-jdbc-url
  schemas:
    image: docker.devops.usu.group/usu-portal/portal/json-schemas
    tag: *portal-version
    themeName: "green"
  adapters:
    usm:
      enabled: true
      image: docker.devops.usu.group/usu-portal/portal/valuemation-portal-adapter
      tag: *portal-version
      webExternalUrl: ""
      webInternalUrl: ""
    ua:
      enabled: true
      image: docker.devops.usu.group/usu-portal/portal/vma-portal-adapter
      tag: *portal-version
      pentahoExternalUrl: ""
      pentahoInternalUrl: ""
      legacyAuth: true

# -- Configuration for the mariadb Helm chart
# (see https://github.com/bitnami/charts/tree/master/bitnami/mariadb/)
mariadb:
  fullnameOverride: &portal-db-host "mariadb"
  architecture: standalone
  auth:
    database: &portal-db-name portal
    username: &portal-db-user portal
    password: &portal-db-password password
    rootPassword: &portal-db-root-password password
  volumePermissions:
    enabled: true

user-management:
  um-admin-ui:
    enabled: true
    angular-base:
      fullnameOverride: um-admin-ui
      ingress:
        enabled: true
        hostname: *um-admin-hostname
        path: /
      env:
        apiUrl: *um-api-url
        baseUrl: /
      deployment:
        podSecurityContext:
          enabled: false
        containerSecurityContext:
          enabled: false

  um-profile-ui:
    enabled: true
    angular-base:
      fullnameOverride: um-profile-ui
      ingress:
        enabled: true
        hostname: *um-profile-hostname
        path: /
      env:
        baseUrl: /
        apiUrl: *um-api-url
      deployment:
        podSecurityContext:
          enabled: false
        containerSecurityContext:
          enabled: false

  user-management-service:
    enabled: true
    image:
      tag: 3.0.0
    ingress:
      enabled: true
      path: /user-management-service
    fullnameOverride: um-service
    env:
      caching:
        type: "simple"
      minio:
        enabled: false
      kcConnection:
        realm: usu
        auth:
          user: admin
          password: admin
        externalUrl: *um-keycloak-url
        internalUrl: "http://um-keycloak/auth"
    deployment:
      podSecurityContext:
        enabled: false
      containerSecurityContext:
        enabled: false

  keycloak:
    enabled: true
    fullnameOverride: um-keycloak
    ingress:
      enabled: true
      path: /
    env:
      db:
        # -- create the database in the DB
        createDatabase: true
        # -- vendor of the DB
        vendor: mariadb
        # -- DB hostname or IP
        host: *portal-db-host
        # -- DB name
        database: keycloak
        # -- DB user
        user: keycloak
        # -- DB password
        password: keycloak
        root:
          password: *portal-db-root-password
      admin:
        user: admin
        password: admin
      loggingLevelRoot: INFO
    extraEnv:
      # -- Explicitly specify Keycloak Frontend URL accessible by external client - needed for USM
      - name: "KEYCLOAK_FRONTEND_URL"
        value: *um-keycloak-url
    deployment:
      podSecurityContext:
        enabled: false
      containerSecurityContext:
        enabled: false
      readinessProbe:
        enabled: false
        initialDelaySeconds: 0
      livenessProbe:
        enabled: true
        initialDelaySeconds: 0
      startupProbe:
        enabled: true
        initialDelaySeconds: 20
        periodSeconds: 5
        failureThreshold: 120
        successThreshold: 1

  mariadb:
    enabled: false

  minio:
    enabled: false

  redis:
    enabled: false

podAnnotations: {}

# -- Pod securityContext
# (see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
podSecurityContext:
  enabled: false

# -- Container securityContext
# (see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
containerSecurityContext:
  enabled: false

service:
  type: ClusterIP
