{{- if and (not .Values.env.existingSecret) (not .Values.env.existingSecretPerPassword) }}
{{- $secretName := include "common.secrets.name" (dict "existingSecret" .Values.env.existingSecret "context" $)}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.env.persistSecrets }}
    helm.sh/resource-policy: keep
    {{- end }}
type: Opaque
data:
  admin-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "admin-password" "length" 10 "providedValues" (list "env.admin.password" ) "context" $) }}
  {{- if not .Values.env.db.existingSecret }}
  password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "password" "length" 10 "providedValues" (list "env.db.password") "context" $) }}
  {{- end }}
  {{- if not .Values.env.db.root.password }}
  mariadb-root-password: {{ include "common.secrets.passwords.manage" (dict "secret" (coalesce .Values.env.db.root.existingSecret .Values.env.db.host | quote) "key" (coalesce .Values.env.db.root.existingSecretKey "mariadb-root-password") "length" 0 "providedValues" (list "env.db.root.password") "context" $) }}
  {{- else if .Values.env.db.root.password }}
  mariadb-root-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "mariadb-root-password" "length" 0 "providedValues" (list "env.db.root.password") "context" $) }}
  {{- else }}
  {{ required "A valid env.db.root.password or env.db.root.existingSecret entry required if env.db.root.user is specified!" .Values.env.db.root.password }}
  {{- end }}
{{- end }}
