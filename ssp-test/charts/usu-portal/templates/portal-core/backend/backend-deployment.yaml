apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "usu-portal.fullname" . }}-backend
  labels:
    {{- include "usu-portal.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "usu-portal.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "usu-portal.selectorLabels" . | nindent 8 }}
        app: usu-portal.backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 10 }}
      {{- end }}
      {{- if .Values.usuportal.backend.injectJdbc }}
      initContainers:
        {{- with .Values.usuportal.backend.injectJdbc }}
        {{- range $key, $value := . }}
        {{- if hasPrefix "http" $value }}
        - name: {{ $key }}-jdbc-injector
          image: busybox:latest
          command: ["sh", "-c"]
          args: 
            - |
              cd /exported && wget --no-check-certificate {{ $value }}
          imagePullPolicy: Always
          volumeMounts:
            - name: jdbc-drivers
              mountPath: /exported        
        {{- else }}
        - name: {{ $key }}-jdbc-injector
          image: {{ $value }}
          imagePullPolicy: Always
          volumeMounts:
            - name: jdbc-drivers
              mountPath: /exported
        {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      containers:
      - name: backend
        image: {{ .Values.usuportal.backend.image }}:{{ .Values.usuportal.backend.tag }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
        ports:
        - containerPort: 8120
        {{- if .Values.usuportal.backend.injectJdbc }}
        volumeMounts:
          - name: jdbc-drivers
            mountPath: /opt/usu/libs
        {{- end }}
        env:
          - name: spring.cloud.consul.enabled
            value: "false"
          - name: com.usu.keycloak.issuerUrls
            value: {{ .Values.usuportal.um.keycloakUrl | quote }}
          - name: com.usu.keycloak.authServerUrl
            value: "http://um-keycloak/auth"
          - name: external-host-whitelist
            value: {{ .Values.usuportal.backend.extHostWhitelist | quote }}
          - name: spring.datasource.url
            value: {{ .Values.usuportal.backend.dbJdbcUrl | quote }}
          - name: spring.datasource.username
            valueFrom:
              secretKeyRef:
                name: portal-secrets
                key: mariadb-username
          - name: spring.datasource.password
            valueFrom:
              secretKeyRef:
                name: portal-secrets
                key: mariadb-password
      {{- if .Values.usuportal.backend.injectJdbc }}
      volumes:
        - name: jdbc-drivers
          emptyDir: {}
      {{- end }}